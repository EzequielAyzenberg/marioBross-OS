==27921== Memcheck, a memory error detector
==27921== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==27921== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==27921== Command: ./nivel Nivel1.cfg
==27921== Parent PID: 26940
==27921== 
==27921== Syscall param socketcall.send(msg) points to uninitialised byte(s)
==27921==    at 0x4062E88: send (socket.S:100)
==27921==    by 0x804CB83: handshakePlataforma (in /home/utnso/GITHUB/tp-2013-2c-the-grid/Nivel/nivel)
==27921==    by 0x804968B: main (in /home/utnso/GITHUB/tp-2013-2c-the-grid/Nivel/nivel)
==27921==  Address 0xbe8bcf55 is on thread 1's stack
==27921== 
==27921== Thread 2:
==27921== Invalid read of size 1
==27921==    at 0x402F76A: strchrnul (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==27921==    by 0x40DFB68: vfprintf (printf-parse.h:99)
==27921==    by 0x410726A: vsnprintf (vsnprintf.c:120)
==27921==    by 0x4E8EEDF: ???
==27921==  Address 0x23 is not stack'd, malloc'd or (recently) free'd
==27921== 
==27921== 
==27921== Process terminating with default action of signal 11 (SIGSEGV)
==27921==  Access not within mapped region at address 0x23
==27921==    at 0x402F76A: strchrnul (in /usr/lib/valgrind/vgpreload_memcheck-x86-linux.so)
==27921==    by 0x40DFB68: vfprintf (printf-parse.h:99)
==27921==    by 0x410726A: vsnprintf (vsnprintf.c:120)
==27921==    by 0x4E8EEDF: ???
==27921==  If you believe this happened as a result of a stack
==27921==  overflow in your program's main thread (unlikely but
==27921==  possible), you can try to increase the size of the
==27921==  main thread stack using the --main-stacksize= flag.
==27921==  The main thread stack size used in this run was 8388608.
==27921== 
==27921== HEAP SUMMARY:
==27921==     in use at exit: 54,232 bytes in 462 blocks
==27921==   total heap usage: 1,171 allocs, 709 frees, 71,892 bytes allocated
==27921== 
==27921== LEAK SUMMARY:
==27921==    definitely lost: 798 bytes in 40 blocks
==27921==    indirectly lost: 152 bytes in 25 blocks
==27921==      possibly lost: 136 bytes in 1 blocks
==27921==    still reachable: 53,146 bytes in 396 blocks
==27921==         suppressed: 0 bytes in 0 blocks
==27921== Rerun with --leak-check=full to see details of leaked memory
==27921== 
==27921== For counts of detected and suppressed errors, rerun with: -v
==27921== Use --track-origins=yes to see where uninitialised values come from
==27921== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
